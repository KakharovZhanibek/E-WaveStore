@model MonoBlockVM


<div class="container">
    <div class="row">
        <div class="col-sm-6 offset-3">
            <h1>Edit Monoblock Data</h1>

            <form action="/Monoblock/AddNewOrEditMonoblock" method="post" enctype="multipart/form-data">

                <div>
                    Avatar: <input class="form-control" type="file" name="@nameof(KeyboardVM.ImgFile)" />
                </div>
                <div>
                    BrandName: @Html.TextBoxFor(x => x.BrandName, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    ModelName: @Html.TextBoxFor(x => x.ModelName, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Price: @Html.TextBoxFor(x => x.Price, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Amount: @Html.TextBoxFor(x => x.Amount, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    CategoryName: @Html.TextBoxFor(x => x.Category.CategoryName, new { Class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.Category.CategoryName)
                </div>
                @*/*
        *  public string OperationalSystem { get; set; }
               public string Dimension { get; set; }
               public string MonoBlockInterface { get; set; } // HDMI
               public bool WebCamera { get; set; } // Yes
               public string VideoCard { get; set; } // 1650 GTX
               public string Cpu { get; set; }
               public int Ram { get; set; }
               public string RamType { get; set; } // DDR 4
               public string Hdd { get; set; } // 1Tb
               public int VideoMemorySize { get; set; }
        */*@
                <div>
                    OperationalSystem: @Html.TextBoxFor(x => x.OperationalSystem, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Dimension: @Html.TextBoxFor(x => x.Dimension, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    MonoBlockInterface: @Html.TextBoxFor(x => x.MonoBlockInterface, new { Class = "form-control", @required = "required" })
                </div>               
                <div>
                    Web Camera: @Html.TextBoxFor(x => x.WebCamera, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    VideoCard: @Html.TextBoxFor(x => x.VideoCard, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Cpu: @Html.TextBoxFor(x => x.Cpu, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Ram: @Html.TextBoxFor(x => x.Ram, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    RamType: @Html.TextBoxFor(x => x.RamType, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Hdd: @Html.TextBoxFor(x => x.Hdd, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    VideoMemorySize: @Html.TextBoxFor(x => x.VideoMemorySize, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    DisplayDiagonal: @Html.TextBoxFor(x => x.DisplayDiagonal, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    DisplayResolution: @Html.TextBoxFor(x => x.DisplayResolution, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Color: @Html.TextBoxFor(x => x.Color, new { Class = "form-control", @required = "required" })
                </div>
                <div>
                    Weight: @Html.TextBoxFor(x => x.Weight, new { Class = "form-control", @required = "required" })
                </div>

                <div class="topMargin20 bottomMargin50">
                    <input class="btn btn-primary" type="submit" value="Save Changes" />
                </div>
            </form>
        </div>
    </div>
</div>
