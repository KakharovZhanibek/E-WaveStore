@model ReflectionIT.Mvc.Paging.PagingList<MouseVM>
@using ReflectionIT.Mvc.Paging
@addTagHelper *,ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "MouseList";
}

@section Scripts{
    <script src="~/js/mouse.js"></script>
}


<div class="container" style="display:flex; padding:20px;">
    <div>
        <form asp-action="StudentListAndSearch" method="get">
            <p>
                <b> Search By: </b>
                @*потом сделать поиск по BrandName and ModelName *@

            </p>
            <br />
            <p>
                <input type="search"
                       placeholder="Search Student..."
                       name="searchStudent"
                       class="width400" />
                <input type="submit" value="Search" class="btn btn-primary leftMargin15" />

                <a class="btn btn-primary leftMargin15" asp-action="StudentList">Get All Mice</a>
                <a class="btn btn-primary leftMargin15" asp-action="AddNewMouse">Add New Mouse</a>


            </p>
        </form>
    </div>
</div>

<div class="container" style="display:flex;">
    @if (Model != null)
    {
        @foreach (var item in Model)
        {

            <div style="margin:10px" class="keyTest">
                <div class="padding50">
                    <img src=@(item.ImgUrl == null ? "/Images/ProductImages/noImage.png" : $"{item.ImgUrl}") class="card-img-top" style="width:100px;">

                </div>

                <div class="padding50">
                    <p>BrandName: <b>@item.BrandName</b></p>
                    <p>ModelName: <b> @Html.ActionLink(@item.ModelName, "MouseFullInfo", new { mouseModelName = item.ModelName })</b></p>
                    <p>Price: <b>@item.Price</b></p>

                </div>
                @if (User.IsInRole("admin"))
                {
                    <div>
                        <button style="width:80px" class="btn editBtn edit" type="submit">@Html.ActionLink("Edit", "EditMouseData", "Mouse", new { modelName = item.ModelName })</button>
                        <input style="width:80px" class="btn btn-danger deleteMouse" data-name="@item.ModelName" type="button" value="Delete" />
                    </div>
                }

            </div>
        }
    }
</div>




<nav aria-label="nav example">
    @if (this.Model != null)
    {
        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
        //<vc:pager paging-list="@Model" />
    }

</nav>
