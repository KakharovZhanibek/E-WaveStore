@model ReflectionIT.Mvc.Paging.PagingList<E_WaveStore.Models.ViewModels.ProductVM>
@using ReflectionIT.Mvc.Paging
@addTagHelper *,ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "ProductList";
}

@section Scripts{
    <script src="~/js/product.js"></script>
}



<div class="container" style="display:flex; padding:20px;">

    <div style="display:flex; flex-direction:row;">
        <form style="display:flex;" asp-action="ProductSearchModelName" method="get">
            <input type="hidden" name="categoryName" value="@ViewBag.CategoryName" />
            <input type="search"
                   placeholder="Search By Model Name..."
                   name="searchbyModelName"
                   class="width400 form-control" />

            <input type="submit" value="Search" class="btn btn-primary leftMargin15" style="width:100px;" />
        </form>

        <form style="display:flex;" asp-action="ProductList" method="get">

            <a class="btn btn-primary leftMargin15" style="width:100px;" asp-action="ProductList" asp-controller="Product" asp-route-categoryName="@ViewBag.CategoryName">Get All</a>

            <div class="dropdown">
                <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                    Сортировка по цене
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                    <li>
                        <a class="dropdown-item nav-link text-dark" asp-controller="Product" asp-action="ProductList" asp-route-categoryName="">по возрастанию</a>
                        @* Нужно передать категорию, на данный момент просто выводит все продукты, не сортирует*@
                    </li>
                    <li>
                        <a class="dropdown-item nav-link text-dark" asp-controller="Product" asp-action="ProductList" asp-route-categoryName="Laptops">по убыванию</a>
                    </li>

                </ul>
            </div>
            @if (User.IsInRole("admin"))
            {
                <a class="btn btn-primary leftMargin15" asp-controller="Product" asp-action="AddNewProduct">Add New Product</a>
            }
        </form>
    </div>

</div>

<section class="pt-5 pb-5">
    <div class="container" style="display:flex; flex-direction:row">
        <div class="container" style="display:flex; flex-direction: column; width:20%;">

            <div style="display: flex; flex-direction: column; border: solid; border-width:1px; padding: 10px;
">

                <h4>Brand Name</h4>

                @foreach (var brandName in ViewBag.BrandNames as List<string>)
                {
                    <div>
                        <input class="inputClass" type="checkbox" value="@brandName" id="@brandName" />
                        <label id="labelId" for="@brandName">@brandName</label>
                    </div>

                }

            </div>
            <div style="margin-top:10px; display: flex; flex-direction: column; border: solid; border-width:1px; padding: 10px;">

                <h4>Price</h4>
                from: <input id="minPrice" data-name="minPrice" type="number" min="0" />
                to: <input id="maxPrice" data-name="maxPrice" type="number" min="1" />
                <input id="categoryName" type="hidden" data-name="@ViewBag.CategoryName" />

            </div>

            <div>
                <input id="getCheckedValues" type="submit" value="Apply" class="btn btn-success" style="margin-top: 15px; width: 155px;" />
            </div>

        </div>

        <div class="container" style="display: flex; flex-direction: row; flex-wrap: wrap; width:80%;">

            @if (Model != null)
            {
                @foreach (var item in Model)
                {
                    @if (item.Amount > 0)
                    {
                        <div class="card deleteCard" style="width: 30%; padding: 20px;">
                            <a asp-action="ProductFullInfo" asp-controller="Product" asp-route-modelName="@item.ModelName">
                                <img class="img-fluid" alt="100%x280" src=@(item.ImgUrl == null ? "/Images/ProductImages/noImage.png" : $"{item.ImgUrl}")>
                            </a>
                            <div class="card-body">
                                <h4 class="card-title">@item.BrandName</h4>
                                <p class="card-text">@Html.ActionLink(@item.ModelName, "ProductFullInfo", new { modelName = item.ModelName })</p>
                                <p class="card-text">@item.Price</p>
                            </div>

                            @await Html.PartialAsync("_CartBuyBtnPartial", item, new ViewDataDictionary(new Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider(),
                                                                                                    new Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary()) { { "ProductsInCart", ViewBag.ProductsInCart } })
                        </div>
                    }
                }
            }

        </div>
    </div>
</section>

<nav aria-label="nav example">
    @if (this.Model != null)
    {
        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
        //<vc:pager paging-list="@Model" />
    }

</nav>
