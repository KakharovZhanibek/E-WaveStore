@model OrderVM

@{
    ViewData["Title"] = "Order";
    var product = ViewBag.Product;
    var paymentTypeNames = ViewBag.PaymentTypeNames;

}

@section Scripts{
    <script src="~/js/order.js"></script>
}

<div class="container" style="display:flex; padding:20px;">

    @*<form action="/Product/Order" method="post" enctype="multipart/form-data">*@

    <div class="col-sm-10 offset-1" style="display:flex; justify-content: space-around;">

        <div style="display: flex; flex-direction:column; padding: 100px 0 100px 0; width:50%">

            <div class="card">
                <img src=@(product.ImgUrl == null ? "/Images/ProductImages/noImage.png" : $"{product.ImgUrl}") class="card-img-top">
            </div>

            <div style="padding-top: 80px;">
                <h2>@product.BrandName</h2>
                <h3> <b>@product.ModelName </b> </h3>
                <h3>@product.Price</h3>
            </div>
        </div>

        @*  + 1) между инпутами сделать марджины
            + 2) валидатор для номера телефона
            - 3) калькулятор конечной суммы
            + 4) при выборе карты форма для заполнения accountNumber/cvv
            + 5) Quantity не может быть ниже 1 и больше чем макс кол-во товара*@
        @*<form action="/Product/Order" method="post" enctype="multipart/form-data">*@
        @using (Html.BeginForm("Order", "Product", FormMethod.Post))
        {
    <div style="display: flex; flex-direction:column; align-items:center; padding: 100px 0 100px 0; width:50%">
        @if (!User.Identity.IsAuthenticated)
        {
            @Html.TextBoxFor(x => x.ApplicationUser.Username, new { placeholder = "Username", Class = "form-control", style = "width: 300px; margin: 20px 0;" })
        }

        @Html.TextBoxFor(x => x.ApplicationUser.Email, new { placeholder = "Email", Class = "form-control", style = "width: 300px; margin: 20px 0;" })
        @Html.TextBoxFor(x => x.ApplicationUser.PhoneNumber, new { id = "phone", placeholder = "PhoneNumber", Class = "form-control", style = "width: 300px; margin: 20px 0;" })
        @Html.TextBoxFor(x => x.Quantity, new { placeholder = "Quantity", @type = "number", min = 1, max = product.Amount, Class = "form-control", style = "width: 300px; margin: 20px 0;" })

        @Html.TextBoxFor(x => x.UnitPrice, new { @readonly = true, Class = "form-control", style = "width: 300px; margin: 20px 0;" })
        @Html.TextBoxFor(x => x.Product.ModelName, new { type="hidden", @value=Model.Product.ModelName})

        <div style="display:flex; margin-top:20px;">
            @foreach (var name in paymentTypeNames)
            {
                <input id="@name" type="radio" name="radioButton" class="radioButton" onclick="ShowNewBlockForCardPaymentType" />
                <label for="@name" style="margin-right:10px;">@name</label>
                @Html.TextBoxFor(x => x.PaymentType.Name, new { id = "returnCheckedRbValue", @type = "hidden" })
            }
        </div>

        <div id="blockForCardPayment" style="display:none;">
            <input id="maskAccountNumber" name="accountNumber" type="text" min="0" class="form-control" placeholder="Account Number..." style="width: 300px; margin: 20px 0;" /> @*max Lenth*@
            <input id="maskaccountDate" name="accountDate" type="text" class="form-control" style="width: 300px; margin: 20px 0;" />
            <input id ="accountCvv"name="accountCvv" min="0" max="999" type="number" class="form-control" placeholder="CVV..." style="width: 300px; margin: 20px 0;" />
        </div>

        <div class="topMargin20 bottomMargin50">
            <input class="btn" style="background-color: #2B6684; color: white; width: 120px; margin-top: 20px;" type="submit" value="Order Now" />
        </div>

    </div> 
        } 
        @*</form>*@ 
 
 
    </div> 
    @*</form>*@ 
</div>
